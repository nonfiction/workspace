#!/bin/zsh

# https://wiki.archlinux.org/title/XDG_Base_Directory
etc="/usr/local/etc"      # XDG_CONFIG_HOME
share="/usr/local/share"  # XDG_DATA_HOME
cache="/usr/local/cache"  # XDG_CACHE_HOME

# Shell helper functions
source $etc/zsh/helpers.sh

# symlink configs to home directory
mkdir -p /work/.local
[ -e /work/.local/share ] || ln -s $share /work/.local/share
[ -e /work/.config ] || ln -s $etc /work/.config
[ -e /work/.cache ] || ln -s $cache /work/.cache

# Update password for user
SUDO_PASSWORD=$(env_file_default SUDO_PASSWORD /run/secrets/sudo_password "secret")
if [ ! -z "$SUDO_PASSWORD" ]; then
  echo "work:${SUDO_PASSWORD}" | chpasswd
fi

# oh-my-zsh
mkdir -p $share/zsh
[ -e $share/zsh/oh-my-zsh ] || git clone https://github.com/robbyrussell/oh-my-zsh.git $share/zsh/oh-my-zsh

# fzf
[ -e $share/fzf ] || git clone --depth 1 https://github.com/junegunn/fzf.git $share/fzf

# tmux plugin manager
mkdir -p $share/tmux/plugins
[ -e $share/tmux/plugins/tpm ] || git clone https://github.com/tmux-plugins/tpm $share/tmux/plugins/tpm
[ -e $share/tmux/plugins/tpm/bin/install_plugins ] && $share/tmux/plugins/tpm/bin/install_plugins

# vim-plug
mkdir -p $share/nvim/site/{autoload,plugged}
curl -fL https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim > $share/nvim/site/autoload/plug.vim
[ -e $share/nvim/site/autoload/custom.vim ] || cp $etc/nvim/custom.vim $share/nvim/site/autoload/custom.vim
nvim +PlugInstall +qall >> /dev/null

# PHP Composer
mkdir -p $share/composer 
[ -e /work/.composer ] || ln -s $share/composer /work/.composer

# npm
mkdir -p $share/npm $cache/npm

# Git & Github
GIT_NAME=$(env_file_default GIT_NAME /run/secrets/git_name "nonfiction")
[ ! -z "$GIT_NAME" ] && sed -i "s/__GIT_NAME__/${GIT_NAME}/" $etc/git/config

GIT_EMAIL=$(env_file_default GIT_EMAIL /run/secrets/git_email "web@nonfiction.ca")
[ ! -z "$GIT_EMAIL" ] && sed -i "s/__GIT_EMAIL__/${GIT_EMAIL}/" $etc/git/config

GITHUB_USER=$(env_file_default GITHUB_USER /run/secrets/github_user "nonfiction-studios")
[ ! -z "$GITHUB_USER" ] && sed -i "s/__GITHUB_USER__/${GITHUB_USER}/" $etc/git/credentials

GITHUB_TOKEN=$(env_file_default GITHUB_TOKEN /run/secrets/github_token)
[ ! -z "$GITHUB_TOKEN" ] && sed -i "s/__GITHUB_TOKEN__/${GITHUB_TOKEN}/" $etc/git/credentials


# Settings for mysql client
ln -sf $etc/mysql/.my.cnf /work/.my.cnf

DB_USER=$(env_file_default DB_USER /run/secrets/db_user "root")
[ ! -z "$DB_USER" ] && sed -i "s/__DB_USER__/${DB_USER}/" $etc/mysql/.my.cnf

DB_PASSWORD=$(env_file_default DB_PASSWORD /run/secrets/db_password "secret")
[ ! -z "$DB_PASSWORD" ] && sed -i "s/__DB_PASSWORD__/${DB_PASSWORD}/" $etc/mysql/.my.cnf

DB_HOST=$(env_file_default DB_HOST /run/secrets/db_host "127.0.0.1")
[ ! -z "$DB_HOST" ] && sed -i "s/__DB_HOST__/${DB_HOST}/" $etc/mysql/.my.cnf

DB_PORT=$(env_file_default DB_PORT /run/secrets/db_port "3306")
[ ! -z "$DB_PORT" ] && sed -i "s/__DB_PORT__/${DB_PORT}/" $etc/mysql/.my.cnf


# Password for code-server
CODE_PASSWORD=$(env_file_default CODE_PASSWORD /run/secrets/code_server "secret")
[ ! -z "$CODE_PASSWORD" ] && sed -i "s/__CODE_PASSWORD__/${CODE_PASSWORD}/" $etc/code-server/config.yaml

# Default settings for code-server
mkdir -p $share/code-server/User
[ -e $share/code-server/User/settings.json ] || cp $etc/code-server/settings.json $share/code-server/User/settings.json

# ssh on port 2222
[ -e /work/.ssh ] || ln -s $etc/ssh /work/.ssh
rc-status
/etc/init.d/sshd start

# Permissions on user directories and docker.sock
chown -R work:work /usr/local /work
chown -R work: /var/run/docker.sock

# Run code-server
su -c "cd /work && code-server" - work
